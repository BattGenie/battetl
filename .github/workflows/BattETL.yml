# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: battetl

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-22.04
    environment: Actions
    env:
      DB_TARGET: db_test
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_HOSTNAME: localhost
      DB_PORT: 5432
      ENV: dev
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10"]

    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: db_test

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest coverage
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Install BattETL
        run: |
          python -m pip install .

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Check out BattGenie/db_bg_cell_testing_main
        uses: actions/checkout@v3
        with:
          repository: BattGenie/db_bg_cell_testing_main
          ssh-key: ${{ secrets.db_bg_cell_testing_main_deploy_key }}
          path: "sqls"

      - name: Install Flyway
        run: |
          curl -s https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/9.15.2/flyway-commandline-9.15.2-linux-x64.tar.gz | tar -xvz
          sudo ln -s `pwd`/flyway-9.15.2/flyway /usr/local/bin

      - name: Run Flyway migrate
        run: |
          flyway migrate -url=jdbc:postgresql://localhost:5432/db_test -user=postgres -password=postgres -locations=sqls/migration_scripts

      - name: Create env file
        run: |
          # other env vars set in repo settings
          touch .env
          echo ENV=dev >> .env
          cat .env

      - name: Test with pytest
        run: |
          coverage run -m pytest -vv
          coverage json
          export TOTAL=$(python -c "import json;print(json.load(open('coverage.json'))['totals']['percent_covered_display'])")
          echo "total=$TOTAL" >> $GITHUB_ENV
          echo "### Total coverage: ${TOTAL}%" >> $GITHUB_STEP_SUMMARY
        
      - name: Make badge
        uses: schneegans/dynamic-badges-action@v1.4.0
        with:
          auth: ${{ secrets.GIST_TOKEN }}
          gistID: ${{ secrets.GIST_ID }}
          filename: covbadge.json
          label: Coverage
          message: ${{ env.total }}%
          minColorRange: 50
          maxColorRange: 90
          valColorRange: ${{ env.total }}
